import tensorflow as tf
from tensorflow.keras import layers, models, Input

def build_encoder(input_shape=(224, 224, 1)):
    """Construye el encoder simple con dos bloques Conv+Pool."""
    inp = Input(shape=input_shape)
    x = layers.Conv2D(32, (3, 3), activation='relu', padding='same')(inp)
    x = layers.MaxPooling2D((2, 2), padding='same')(x)
    x = layers.Conv2D(64, (3, 3), activation='relu', padding='same')(x)
    encoded = layers.MaxPooling2D((2, 2), padding='same')(x)
    return models.Model(inputs=inp, outputs=encoded, name="encoder")

def build_autoencoder_classifier(encoder, num_classes):
    """AÃ±ade a encoder una cabeza classifier con Flatten y Dense."""
    inp = Input(shape=(224, 224, 1))
    x = encoder(inp)
    x = layers.Flatten()(x)
    x = layers.Dense(128, activation='relu')(x)
    out = layers.Dense(num_classes, activation='softmax')(x)
    return models.Model(inputs=inp, outputs=out, name="autoenc_classifier")

def compile_model(model):
    model.compile(optimizer='adam',
                  loss='categorical_crossentropy',
                  metrics=['accuracy'])
